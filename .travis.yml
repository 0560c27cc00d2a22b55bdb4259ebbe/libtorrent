language: cpp

os:
  - linux
  - osx

env:
  - variant=test_debug
  - variant=test_release
  - variant=test_barebones

compiler:
  - gcc
  - clang

# container-based builds
sudo: false
cache:
  directories:
    - $HOME/.ccache

# sources  list: https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json,
# packages list: https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
addons:
  apt:
    sources:
    - boost-latest
    - ubuntu-toolchain-r-test
    packages:
    - libboost1.55-all-dev
    - libboost1.55-tools-dev
    - python2.7-dev
    - g++-4.8

before_install:
  - git submodule foreach git pull origin master --depth=1

install:
  - 'if [ $variant == "test_debug" ]; then
    echo "using gcc : : ccache g++-4.8 : <cxxflags>-std=c++11 <compileflags>-fsanitize=address <linkflags>-fsanitize=address ;" > ~/user-config.jam;
    else
    echo "using gcc : : ccache g++-4.8 : <cxxflags>-std=c++11 ;" > ~/user-config.jam;
    fi'
  - 'echo "using clang : : ccache clang++ : <cxxflags>-std=c++11 ;" >> ~/user-config.jam'
  - 'echo "using python : 2.7 ;" >> ~/user-config.jam'
  - ccache -V && ccache --show-stats && ccache --zero-stats

script:
  - cd test
  - bjam --hash -j3 variant=$variant warnings=off -l900 $CC
  - cd ../examples
  - bjam --hash -j3 variant=$variant warnings=off $CC
  - cd ../bindings/python
  - bjam --hash -j3 variant=$variant warnings=off $CC stage_module
  - LD_LIBRARY_PATH=. python test.py
  - if [ $variant == "test_debug" ]; then
    cd ../../simulation;
    bjam --hash -j3 crypto=built-in warnings=off $CC;
    fi
  - ccache --show-stats

